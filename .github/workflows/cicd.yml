name: Java Application CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Git
        run: |
          echo "ACTION=${{ secrets.ACTION }}" >> $GITHUB_ENV

      - name: Checkout repository
        if: env.ACTION == 'create'
        uses: actions/checkout@v3
        with:
          repository: Megaax/javaApp-CICD
          ref: main

      - name: Set up JDK 11
        if: env.ACTION == 'create'
        uses: actions/setup-java@v3
        with:
          java-version: "11"

      - name: Unit Test with Maven
        if: env.ACTION == 'create'
        run: mvn test

      - name: Integration Test with Maven
        if: env.ACTION == 'create'
        run: mvn verify -DskipUnitTests
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  
      # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} #OPTIONAL

      # Optionally you can use the output from the Quality Gate in another step.
      # The possible outputs of the `quality-gate-status` variable are `PASSED`, `WARN` or `FAILED`.
      - name: "Example show SonarQube Quality Gate Status value"
        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
    