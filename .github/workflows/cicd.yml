name: Java Application CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full repository history for better analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"  # Specify the JDK distribution

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn clean package  # Compile the project to generate class files

      - name: Verify Compiled Classes
        run: ls -R target/classes  # List files in the target/classes directory to ensure they exist

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Unit Test with Maven
        run: mvn test

      - name: Integration Test with Maven
        run: mvn verify -DskipUnitTests

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          args: >
            -Dsonar.organization=my-org
            -Dsonar.projectKey=my-Java-web-app
            -Dsonar.java.binaries=target/classes 
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}




# name: Java Application CI

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Set up Git
#         run: |
#           echo "ACTION=${{ secrets.ACTION }}" >> $GITHUB_ENV

#       - name: Checkout repository
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0  # Full repository history for better analysis

#       - name: Set up JDK 11
#         uses: actions/setup-java@v4
#         with:
#           java-version: "11"
#           distribution: "temurin"  # Specify the JDK distribution

#       - name: Cache Maven packages
#         uses: actions/cache@v3
#         with:
#           path: ~/.m2
#           key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#           restore-keys: ${{ runner.os }}-m2

#       - name: Cache SonarQube packages
#         uses: actions/cache@v3
#         with:
#           path: ~/.sonar/cache
#           key: ${{ runner.os }}-sonar
#           restore-keys: ${{ runner.os }}-sonar

#       - name: Unit Test with Maven
#         run: mvn test

#       - name: Integration Test with Maven
#         run: mvn verify -DskipUnitTests
      
#       - name: Build with Maven
#         run: mvn clean package  # Compile the project to generate class files

#       - name: Cache SonarQube packages
#         uses: actions/cache@v3
#         with:
#           path: ~/.sonar/cache
#           key: ${{ runner.os }}-sonar
#           restore-keys: ${{ runner.os }}-sonar

#       - name: SonarQube Scan
#         uses: sonarsource/sonarqube-scan-action@master
#         with:
#           args: >
#             -Dsonar.organization=my-org
#             -Dsonar.projectKey=my-Java-web-app
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

